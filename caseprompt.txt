$PWD
$EMPTY
$EMPTY echo hi
./test_files/invalid_permission
./missing.out
missing.out
"aaa"
test_files
./test_files
/test_files
minishell.h
$
$?
README.md
"" cat ./README.md
"" echo hello
test_files/

a
42
echo $s$USER
echo $USER$s
echo "$s$USER"
echo "$USER$s"
echo "$42"
echo "$?"
echo "$?HELLO"
echo "$!HELLO"
echo "$!$USER"
echo "$!$USER!"
echo '$PWD'
echo ""''""''"''"'""'
echo $42
echo $!
echo $?!
echo Hello"my friend $USER$S! from 42?"'are you ok?'$USER
echo Hello"my friend $USER$S from 42?"'are you ok?'$USER
echo Hello"my friend $S$USER$S from 42?"'are you ok?'$USER
echo Hello"my friend $S$USER$S'from' 42?"'are you ok?'$USER
echo Hello"my friend$S$USER$S'from' 42?"'are you ok?'$USER
echo Hello"my friend$S$USER$S$!'from' 42?"'are you ok?'$USER
echo Hello"my friend$S$USER$S$!='from' 42?"'are you ok?'$USER
echo Hello"my friend$S$USER$S$='from' 42?"'are you ok?'$USER
echo Hello my friend$S$USER$S$1'from' 42?'are you ok?'$USER
echo Hello my friend$S$USER$S$='from' 42?'are you ok?'$USER
echo Hello my friend$S$USER$S$1from 42?'are you ok?'$USER
echo Hello my friend$S$USER$S$=from 42?are you ok?$USER
echo Hello my friend$S$USER$S$1from 42?are you ok?$USER
echo Hello my friend$S$USER$S$=from 42?are you ok?$USER
echo ~
echo ~ Hello My friend
echo Hello My friend ~
echo ~$USER
echo ~ $USE
echo $USER~
echo $USE ~
export ==hello
export HELLO=123 A- B
export ZZ$=hello
export ZZ+=hello world
export ZZ+=hello world!
cd path path
cd .
cd pathinvalid
cd ../pathinvalid
cd /pathinvalid
cd /pathinvalid/..
cd /pathinvalid/../pathinvalid
exit -256
exit -255
exit -250
exit -100
exit -10
exit 0
exit 1
exit -+
exit +-
exit +=+=+=+=+=+=+=+=+=+=+=+=+=+=
exit ++42
exit --42
exit 42 42

ls >outfile01 && cat outfile01
cat <minishell.h&ls
||
|| echo oi
&
&&
|& #-> n√£o precisa
*
> *
>> *
> & # valido para < e >>
> &&
> ||
echo oi || echo tchau
env | grep USER || grep lucas
> *
>> *
< *
<< *

echo hello world
echo "hello world"
echo 'hello world'
echo hello'world'
echo hello""world
echo "hello '$USER'$USER!$USER"hello'mini'
echo ''
echo "'$USER'"
echo '"$USER"'
echo "$PWD"
echo "aspas ->'"
echo "aspas -> ' "
echo 'aspas ->"'
echo 'aspas -> " '
echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<"
echo '> >> < * ? [ ] | ; [ ] || && ( ) & # $ \ <<'
echo "exit_code ->$? user ->$USER home -> $HOME"
echo 'exit_code ->$? user ->$USER home -> $HOME'
echo "$"
echo '$'
echo $
echo $?
echo $?HELLO
pwd
pwd oi
export hello
export HELLO=123
export A-
export HELLO=123 A
export HELLO="123 A-"
export hello world
export HELLO-=123
export =
export =hello
export 123
export ZZ+=hello
export ZZ+=:hello
export ZZ=hello
export ZZ-=hello
export ZZ-A=hello
export _ZZ-A=hello
export 1ZZA=hello
export Z1ZA=hello
export Z-ZA=hello
unset
unset HELLO
unset HELLO1 HELLO2
unset HOME
unset PATH
unset SHELL
c
cda
cd $PWD
cd $PWD hi
exi
exita
exit -1
exit +1
exit 255
exit 256
exit 257
exit 123
exit 298
exit +100
exit "+100"
exit +"100"
exit "-100"
exit -"100"
exit hello
exit --
exit ++
exit a
exit -a
exit 42 world
exit 9223372036854775807
exit -9223372036854775808
exit 9223372036854775808

unset HELLO=
unset  A-
export HELLO=123 A- WORLD=456
unset  HELLO A- WORLD
export UNO=1 DOS-2 TRES=3 || env | grep TRES
export | sort | grep -v SHLVL | grep -v "declare -x _" | grep -v "PS.="
exit 9223372036854775807
exit 9223372036854775808
exit -9223372036854775807
exit -9223372036854775808
exit -9223372036854775809

env | sort | grep -v SHLVL | grep -v ^_
cat ./test_files/infile_big | grep oi
export | grep "USER"
commandnotfound1 | commandnotfound2
commandnotfound1 | echo hello
echo hello | echo bye
echo hello | commandnotfound1
cat minishell.h | grep ");"$
export GHOST=123 | env | grep GHOST

// REDIRECTS

grep hi <./test_files/infile
grep hi "<infile" <         ./test_files/infile
echo hi < ./test_files/infile bye bye
grep hi <./test_files/infile_big <./test_files/infile
echo <"./test_files/infile" "bonjour       42"
cat <"./test_files/file name with spaces"
cat <./test_files/infile_big ./test_files/infile
cat <"1""2""3""4""5"
echo <"./test_files/infile" <missing <"./test_files/infile"
echo <missing <"./test_files/infile" <missing
cat <"./test_files/infile"
echo <"./test_files/infile_big" | cat <"./test_files/infile"
echo <"./test_files/infile_big" | cat "./test_files/infile"
echo <"./test_files/infile_big" | echo <"./test_files/infile"
echo hi | cat <"./test_files/infile"
echo hi | cat "./test_files/infile"
cat <"./test_files/infile" | echo hi
cat <"./test_files/infile" | grep hello
cat <"./test_files/infile_big" | echo hi
cat <missing
cat <missing | cat
cat <missing | echo oi
cat <missing | cat <"./test_files/infile"
echo <123 <456 hi | echo 42
ls >./outfiles/outfile01
ls >         ./outfiles/outfile01
echo hi >         ./outfiles/outfile01 bye
ls >./outfiles/outfile01 >./outfiles/outfile02
ls >./outfiles/outfile01 >./test_files/invalid_permission
ls >"./outfiles/outfile with spaces"
ls >"./outfiles/outfile""1""2""3""4""5"
ls >"./outfiles/outfile01" >./test_files/invalid_permission >"./outfiles/outfile02"
ls >./test_files/invalid_permission >"./outfiles/outfile01" >./test_files/invalid_permission
cat <"./test_files/infile" >"./outfiles/outfile01"
echo hi >./outfiles/outfile01 | echo bye
echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye
echo hi | echo >./outfiles/outfile01 bye
echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02
echo hi >./outfiles/outfile01 | echo bye >./outfiles/outfile02
echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye
echo hi >./test_files/invalid_permission | echo bye
echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye
echo hi | echo bye >./test_files/invalid_permission
echo hi | >./outfiles/outfile01 echo bye >./test_files/invalid_permission
echo hi | echo bye >./test_files/invalid_permission >./outfiles/outfile01
cat <"./test_files/infile" >./test_files/invalid_permission
cat >./test_files/invalid_permission <"./test_files/infile"
cat <missing >./outfiles/outfile01
cat >./outfiles/outfile01 <missing
cat <missing >./test_files/invalid_permission
cat >./test_files/invalid_permission <missing
cat >./outfiles/outfile01 <missing >./test_files/invalid_permission
ls >>./outfiles/outfile01
ls >>      ./outfiles/outfile01
ls >>./outfiles/outfile01 >./outfiles/outfile01
ls >./outfiles/outfile01 >>./outfiles/outfile01
ls >./outfiles/outfile01 >>./outfiles/outfile01 >./outfiles/outfile02
ls >>./outfiles/outfile01 >>./outfiles/outfile02
ls >>./test_files/invalid_permission
ls >>./test_files/invalid_permission >>./outfiles/outfile01
ls >>./outfiles/outfile01 >>./test_files/invalid_permission
ls >./outfiles/outfile01 >>./test_files/invalid_permission >>./outfiles/outfile02
ls <missing >>./test_files/invalid_permission >>./outfiles/outfile02
ls >>./test_files/invalid_permission >>./outfiles/outfile02 <missing
echo hi >>./outfiles/outfile01 | echo bye
echo hi >>./outfiles/outfile01 >>./outfiles/outfile02 | echo bye
echo hi | echo >>./outfiles/outfile01 bye
echo hi | echo bye >>./outfiles/outfile01 >>./outfiles/outfile02
echo hi >>./outfiles/outfile01 | echo bye >>./outfiles/outfile02
echo hi >>./test_files/invalid_permission | echo bye
echo hi >>./test_files/invalid_permission >./outfiles/outfile01 | echo bye
echo hi | echo bye >>./test_files/invalid_permission
echo hi | echo >>./outfiles/outfile01 bye >./test_files/invalid_permission
cat <minishell.h>./outfiles/outfile
cat <minishell.h|ls

|
| echo oi
| |
| $
| >
>
>>
>>>
<
<<
echo hi <
cat    <| ls
echo hi | >
echo hi | > >>
echo hi | < |
echo hi |   |
echo hi |  "|"

echo *.md
echo built*
echo oi*
echo *.supp
echo 'bye *' bo*s bye
echo 'bye *' mini* bye
echo *ME*
echo "*"
"*"
manual*
echo * | awk -v RS=" " '{print}' | sort
<*.txt
echo 'bye *' t*.c bye
echo *EMPTY hello READ* world
cat <README*
echo "pip*"
echo *bonus *.supp bonjour

ls >outfile01 && cat outfile01
cat <minishell.h&ls
||
|| echo oi
&
&&
|& #-> n√£o precisa
*
> *
>> *
> & # valido para < e >>
> &&
> ||
echo oi || echo tchau
env | grep USER || grep lucas
> *
>> *
< *
<< *

#
.
;


// ARQUIVOS FILE para quebrar

file 1

üòà üòà üòà
This will break your minishell
üòà üòà üòà

file 2

EMPTY


file 3

hi
hello
world
42

file 4

um grande texto um livro por exemplo.

file 5

invalid_permission

file 6

#include <fcntl.h>
#include <stdio.h>
#include <unistd.h>

int	main(int argc, char const *argv[])
{
	int	pid;

	pid = fork();
	open("infile", O_RDONLY);
	while (1)
	{
		printf("Helloo miniHELL %i\n", pid);
		sleep(1);
	}
	return (0);
}

um loop para quebrar.



//.... SINAIS PARA TRATAR ..../////


CTRL+C
CTRL+D
CTRL+\
CTRL+C, CTRL+C, CTRL+C, exit
CTRL+C, CTRL+C, CTRL+C, Ctrl+D

cat | ls # testar dando depois:
#- Enter
#- Ctrl+D
#- Ctrl+\
#- Ctrl+C

grep oi | ls # testar dando depois:
#- Enter + Ctrl+D
#- Ctrl+D
#- "oi" + Enter + Ctrl+D
#- Ctrl+\
#- Ctrl+C
#- "oi" + Enter + Ctrl+\

./test_files/loop.out # finalizar com:
#- Ctrl+C
#- Ctrl+\  -> workspaces: ^\Quit\n
#- Ctrl+D  -> n√£o faz nada

./test_files/loop.out | ls
# finalizar com:
#- Ctrl+C
#- Ctrl+\
#- Ctrl+D

ls | ./test_files/loop.out
# finalizar com:
#- Ctrl+C
#- Ctrl+\
#- Ctrl+D

hello + Ctrl+C
# Check that the new line is empty


//.... ALGUNS GO CRAZY ......//

# We need to implement "env with no options or arguments", the output here is optional
env hello world

# We need to imlement only "cd with only a relative or absolute path"
cd
cd ~

# Empty export isn't set on `env` but is set on `export`
export hello
env | grep hello
export | grep hello

# This shouldn't break
unset HOME
cd ~

# Local variables are options
aa==vv
echo $aa

# Open pipe waits for input
ls |

# Undefined
<<<
<<<<
> '
echo hi |    |  < >>
echo hi |  < >>   |  |


//... MANDATORY...//

# Prints without a new line
echo -n hello

# update env variable value
export HELLO=123
export HELLO="beautiful world"

# keep track of OLDPWD
cd obj
echo $PWD $OLDPWD

# invalid command, followed by empty input, should keep the exit code
doesntexist

echo $?

#invalid command, followed by empty variable, should clear the exit code
doesntexist
$EMPTY
echo $?

# Check if there isn't a zombie process called `cat`
echo "hi" | cat | cat | cat | cat | cat | cat | cat
ps -a

# Should skip the empty argument, and print hello after spaces
echo - "" "  " hello

# Neither of these unsets should break the shell, and you should still be able to call `/bin/ls`
unset USER
unset PATH
unset PWD
/bin/ls

# This should not change the current directory
cd .. hi

# Empty `cd` moves to home
cd

//.... HEREDOC... //

cat <<HEREDOC
oi
HEREDOC

cat <<HERE <<DOC
oi
HERE
time
DOC

cat <<HERE | ls
oi
HERE

cat <<HERE
$USERecho hello | commandnotfound1
oi
HERE

cat <minishell.h <<HERE <missing | ls
HERE

cat <minishell.h <<HERE | cat
HERE

cat <minishell.h <<HERE <missing <<DOC | echo oi
HERE
DOC

cat << $
oi
$

<< echo oi
echo
